{"version":3,"sources":["js/Song.js","js/Player.js","js/index.js"],"names":["Song","exports","default","_createClass","key","audioPath","_classCallCheck","audioElement","Audio","value","play","console","log","concat","pause","paused","_Song","_interopRequireDefault","require","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","a","n","TypeError","_defineProperties","r","t","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","i","_toPrimitive","toPrimitive","call","String","Number","Player","map","songsMap","song","isPlaying","_","_Player","aux","_i","_Object$keys","keys","songs","player","document","querySelectorAll","forEach","item","addEventListener","classList","playPauseSong","remove","add"],"mappings":"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","file":"js.c42e0af9.js","sourceRoot":"../src","sourcesContent":["export default class Song{\n    constructor(key,audioPath){\n        this.key = key;\n        this.audioElement = new Audio(audioPath);\n\n    }\n    play(){\n        this.audioElement.play();\n        console.log(`${this.key} is playing`)\n    }\n    pause(){\n        this.audioElement.pause();\n        console.log(`${this.key} is paused`)\n    }\n    isPlaying(){\n        return !this.audioElement.paused;\n    }\n\n}","import Song from './Song.js'\n\nexport default class Player {\n\n    constructor(map) {\n        this.songsMap = {};\n        for(let key in map){\n            this.songsMap[key] = new Song(key, map[key]);\n        }\n    }\n\n    playPauseSong(key) {\n        key = \".\"+key;\n        let song = this.songsMap[key];\n        if(song.isPlaying()){\n            song.pause();\n            return \"paused\";\n        }else{\n            song.play();\n            return \"playing\";\n        }\n    }\n}","import songs from '../assets/songs/*.mp3';\nimport Player from './Player.js';\n\n\nconst map = {};\n\nlet aux = 1;\nfor (let key of Object.keys(songs)) {\n    map[`.item-${aux}`] = songs[key];\n    aux++;\n}\n\n\n\nconst player = new Player(map);\n\n\ndocument.querySelectorAll('.item').forEach(item => {\n    item.addEventListener('click', () => {\n\n        const key = item.classList[1];\n        if (player.playPauseSong(key) === \"paused\") {\n            item.classList.remove('playing');\n        } else {\n            item.classList.add('playing');\n\n        }\n    });\n});\n"]}